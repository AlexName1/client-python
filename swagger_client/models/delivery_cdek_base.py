# coding: utf-8

"""
    Rest DB

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DeliveryCdekBase(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'uuid_id': 'str',
        'tariff_code': 'int',
        'delivery_point': 'str',
        'create_datetime': 'datetime',
        'status': 'int',
        'status_cdek': 'str',
        'cdek_number': 'str',
        'photo_tg_file_id': 'str',
        'invoice_tg_file_id': 'str',
        'courier_to_location': 'str',
        'stock_id': 'str',
        'comment_sender': 'str'
    }

    attribute_map = {
        'id': 'id',
        'uuid_id': 'uuid_id',
        'tariff_code': 'tariff_code',
        'delivery_point': 'delivery_point',
        'create_datetime': 'create_datetime',
        'status': 'status',
        'status_cdek': 'status_cdek',
        'cdek_number': 'cdek_number',
        'photo_tg_file_id': 'photo_tg_file_id',
        'invoice_tg_file_id': 'invoice_tg_file_id',
        'courier_to_location': 'courier_to_location',
        'stock_id': 'stock_id',
        'comment_sender': 'comment_sender'
    }

    def __init__(self, id=None, uuid_id=None, tariff_code=None, delivery_point=None, create_datetime=None, status=None, status_cdek=None, cdek_number=None, photo_tg_file_id=None, invoice_tg_file_id=None, courier_to_location=None, stock_id=None, comment_sender=None):  # noqa: E501
        """DeliveryCdekBase - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._uuid_id = None
        self._tariff_code = None
        self._delivery_point = None
        self._create_datetime = None
        self._status = None
        self._status_cdek = None
        self._cdek_number = None
        self._photo_tg_file_id = None
        self._invoice_tg_file_id = None
        self._courier_to_location = None
        self._stock_id = None
        self._comment_sender = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if uuid_id is not None:
            self.uuid_id = uuid_id
        if tariff_code is not None:
            self.tariff_code = tariff_code
        if delivery_point is not None:
            self.delivery_point = delivery_point
        if create_datetime is not None:
            self.create_datetime = create_datetime
        if status is not None:
            self.status = status
        if status_cdek is not None:
            self.status_cdek = status_cdek
        if cdek_number is not None:
            self.cdek_number = cdek_number
        if photo_tg_file_id is not None:
            self.photo_tg_file_id = photo_tg_file_id
        if invoice_tg_file_id is not None:
            self.invoice_tg_file_id = invoice_tg_file_id
        if courier_to_location is not None:
            self.courier_to_location = courier_to_location
        if stock_id is not None:
            self.stock_id = stock_id
        if comment_sender is not None:
            self.comment_sender = comment_sender

    @property
    def id(self):
        """Gets the id of this DeliveryCdekBase.  # noqa: E501


        :return: The id of this DeliveryCdekBase.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeliveryCdekBase.


        :param id: The id of this DeliveryCdekBase.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def uuid_id(self):
        """Gets the uuid_id of this DeliveryCdekBase.  # noqa: E501


        :return: The uuid_id of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._uuid_id

    @uuid_id.setter
    def uuid_id(self, uuid_id):
        """Sets the uuid_id of this DeliveryCdekBase.


        :param uuid_id: The uuid_id of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._uuid_id = uuid_id

    @property
    def tariff_code(self):
        """Gets the tariff_code of this DeliveryCdekBase.  # noqa: E501


        :return: The tariff_code of this DeliveryCdekBase.  # noqa: E501
        :rtype: int
        """
        return self._tariff_code

    @tariff_code.setter
    def tariff_code(self, tariff_code):
        """Sets the tariff_code of this DeliveryCdekBase.


        :param tariff_code: The tariff_code of this DeliveryCdekBase.  # noqa: E501
        :type: int
        """

        self._tariff_code = tariff_code

    @property
    def delivery_point(self):
        """Gets the delivery_point of this DeliveryCdekBase.  # noqa: E501


        :return: The delivery_point of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._delivery_point

    @delivery_point.setter
    def delivery_point(self, delivery_point):
        """Sets the delivery_point of this DeliveryCdekBase.


        :param delivery_point: The delivery_point of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._delivery_point = delivery_point

    @property
    def create_datetime(self):
        """Gets the create_datetime of this DeliveryCdekBase.  # noqa: E501


        :return: The create_datetime of this DeliveryCdekBase.  # noqa: E501
        :rtype: datetime
        """
        return self._create_datetime

    @create_datetime.setter
    def create_datetime(self, create_datetime):
        """Sets the create_datetime of this DeliveryCdekBase.


        :param create_datetime: The create_datetime of this DeliveryCdekBase.  # noqa: E501
        :type: datetime
        """

        self._create_datetime = create_datetime

    @property
    def status(self):
        """Gets the status of this DeliveryCdekBase.  # noqa: E501


        :return: The status of this DeliveryCdekBase.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeliveryCdekBase.


        :param status: The status of this DeliveryCdekBase.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def status_cdek(self):
        """Gets the status_cdek of this DeliveryCdekBase.  # noqa: E501


        :return: The status_cdek of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._status_cdek

    @status_cdek.setter
    def status_cdek(self, status_cdek):
        """Sets the status_cdek of this DeliveryCdekBase.


        :param status_cdek: The status_cdek of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._status_cdek = status_cdek

    @property
    def cdek_number(self):
        """Gets the cdek_number of this DeliveryCdekBase.  # noqa: E501


        :return: The cdek_number of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._cdek_number

    @cdek_number.setter
    def cdek_number(self, cdek_number):
        """Sets the cdek_number of this DeliveryCdekBase.


        :param cdek_number: The cdek_number of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._cdek_number = cdek_number

    @property
    def photo_tg_file_id(self):
        """Gets the photo_tg_file_id of this DeliveryCdekBase.  # noqa: E501


        :return: The photo_tg_file_id of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._photo_tg_file_id

    @photo_tg_file_id.setter
    def photo_tg_file_id(self, photo_tg_file_id):
        """Sets the photo_tg_file_id of this DeliveryCdekBase.


        :param photo_tg_file_id: The photo_tg_file_id of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._photo_tg_file_id = photo_tg_file_id

    @property
    def invoice_tg_file_id(self):
        """Gets the invoice_tg_file_id of this DeliveryCdekBase.  # noqa: E501


        :return: The invoice_tg_file_id of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._invoice_tg_file_id

    @invoice_tg_file_id.setter
    def invoice_tg_file_id(self, invoice_tg_file_id):
        """Sets the invoice_tg_file_id of this DeliveryCdekBase.


        :param invoice_tg_file_id: The invoice_tg_file_id of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._invoice_tg_file_id = invoice_tg_file_id

    @property
    def courier_to_location(self):
        """Gets the courier_to_location of this DeliveryCdekBase.  # noqa: E501


        :return: The courier_to_location of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._courier_to_location

    @courier_to_location.setter
    def courier_to_location(self, courier_to_location):
        """Sets the courier_to_location of this DeliveryCdekBase.


        :param courier_to_location: The courier_to_location of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._courier_to_location = courier_to_location

    @property
    def stock_id(self):
        """Gets the stock_id of this DeliveryCdekBase.  # noqa: E501


        :return: The stock_id of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._stock_id

    @stock_id.setter
    def stock_id(self, stock_id):
        """Sets the stock_id of this DeliveryCdekBase.


        :param stock_id: The stock_id of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._stock_id = stock_id

    @property
    def comment_sender(self):
        """Gets the comment_sender of this DeliveryCdekBase.  # noqa: E501


        :return: The comment_sender of this DeliveryCdekBase.  # noqa: E501
        :rtype: str
        """
        return self._comment_sender

    @comment_sender.setter
    def comment_sender(self, comment_sender):
        """Sets the comment_sender of this DeliveryCdekBase.


        :param comment_sender: The comment_sender of this DeliveryCdekBase.  # noqa: E501
        :type: str
        """

        self._comment_sender = comment_sender

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DeliveryCdekBase, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DeliveryCdekBase):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
